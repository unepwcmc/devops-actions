name: Nuxt Frontend Deployment (Simplified)

on:
  push:
    branches: [main, staging]
  release:
    types: [published]

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
      deploy-type: ${{ steps.env.outputs.deploy-type }}
    steps:
      - id: env
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "deploy-type=release" >> $GITHUB_OUTPUT
            echo "üöÄ Production deployment triggered by release: ${{ github.event.release.tag_name }}"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "deploy-type=branch" >> $GITHUB_OUTPUT
            echo "üîß Staging deployment triggered by push to main"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "deploy-type=branch" >> $GITHUB_OUTPUT
            echo "üîß Staging deployment triggered by push to staging"
          else
            echo "‚ùå No deployment configured for this trigger"
            exit 1
          fi

  deploy:
    needs: determine-environment
    runs-on: ubuntu-latest
    environment: ${{ needs.determine-environment.outputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Step 1: Validate and populate ALL Kamal secrets from template
      - name: Validate and Populate Secrets
        uses: unepwcmc/devops-actions/.github/actions/validate-secrets@v1
        with:
          secrets-file: '.kamal/secrets-common'
          environment: ${{ needs.determine-environment.outputs.environment }}

      # Step 2: Start notification (uses GitHub secrets directly)
      - name: Notify Deployment Start
        id: notify-start
        uses: unepwcmc/devops-actions/.github/actions/slack-notify@v1
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          notification-type: 'started'
          action-type: 'deploy'
          environment: ${{ needs.determine-environment.outputs.environment }}
          repository: ${{ github.repository }}
          repository-url: ${{ github.server_url }}/${{ github.repository }}
          action-run-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          actor: ${{ github.actor }}
          actor-url: https://github.com/${{ github.actor }}
          workflow-name: ${{ github.workflow }}
          run-id: ${{ github.run_id }}
          commit-message: ${{ github.event.head_commit.message || github.event.release.name }}

      # Step 3: Deploy (SIMPLIFIED - only needs environment!)
      - name: Deploy Nuxt Application
        id: deploy
        uses: unepwcmc/devops-actions/.github/actions/nuxt-kamal-v2-deploy-simple@v1
        with:
          environment: ${{ needs.determine-environment.outputs.environment }}
          deployment-strategy: ${{ needs.determine-environment.outputs.environment == 'production' && 'blue-green' || 'rolling' }}
          
      # Step 4: Success notification
      - name: Notify Deployment Success
        if: success()
        uses: unepwcmc/devops-actions/.github/actions/slack-notify@v1
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          notification-type: 'success'
          action-type: 'deploy'
          environment: ${{ needs.determine-environment.outputs.environment }}
          update-message-ts: ${{ steps.notify-start.outputs.message-ts }}
          repository: ${{ github.repository }}
          repository-url: ${{ github.server_url }}/${{ github.repository }}
          action-run-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          actor: ${{ github.actor }}
          actor-url: https://github.com/${{ github.actor }}
          workflow-name: ${{ github.workflow }}
          run-id: ${{ github.run_id }}
          commit-message: ${{ github.event.head_commit.message || github.event.release.name }}
          deployment-duration: ${{ steps.deploy.outputs.deployment-duration }}

      # Step 5: Failure notification
      - name: Notify Deployment Failure
        if: failure()
        uses: unepwcmc/devops-actions/.github/actions/slack-notify@v1
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          notification-type: 'failure'
          action-type: 'deploy'
          environment: ${{ needs.determine-environment.outputs.environment }}
          update-message-ts: ${{ steps.notify-start.outputs.message-ts }}
          repository: ${{ github.repository }}
          repository-url: ${{ github.server_url }}/${{ github.repository }}
          action-run-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          actor: ${{ github.actor }}
          actor-url: https://github.com/${{ github.actor }}
          workflow-name: ${{ github.workflow }}
          run-id: ${{ github.run_id }}
          commit-message: ${{ github.event.head_commit.message || github.event.release.name }}
          error-message: 'Nuxt frontend deployment (Kamal v2) failed - check logs for details' 