name: Nuxt Frontend Deployment (Kamal v1)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  deploy:
    name: Deploy Nuxt Frontend (Kamal v1)
    runs-on: self-hosted
    environment: ${{ inputs.environment || 'staging' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Notification: Start
      - name: Notify Deployment Start
        id: notify-start
        uses: unepwcmc/devops-actions/.github/actions/slack-notify@v1
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          notification-type: 'started'
          action-type: 'deploy'
          environment: ${{ inputs.environment || 'staging' }}
          repository: ${{ github.repository }}
          repository-url: ${{ github.server_url }}/${{ github.repository }}
          action-run-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          actor: ${{ github.actor }}
          actor-url: https://github.com/${{ github.actor }}
          workflow-name: ${{ github.workflow }}
          run-id: ${{ github.run_id }}
          commit-message: ${{ github.event.head_commit.message }}

      # Main Deployment
      - name: Deploy Nuxt Frontend
        id: deploy
        uses: unepwcmc/devops-actions/.github/actions/nuxt-kamal-v1-deploy@v1
        with:
          environment: ${{ inputs.environment || 'staging' }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          kamal-registry-username: ${{ secrets.KAMAL_REGISTRY_USERNAME }}
          kamal-registry-password: ${{ secrets.KAMAL_REGISTRY_PASSWORD }}
          gh-token: ${{ secrets.GH_TOKEN }}
          web-server-dns-name: ${{ secrets.WEB_SERVER_DNS_NAME }}
          
          # Rails API Integration
          rails-master-key: ${{ secrets.RAILS_MASTER_KEY }}
          rails-default-public-app-host: ${{ secrets.RAILS_DEFAULT_PUBLIC_APP_HOST }}
          rails-default-public-app-host-protocol: ${{ secrets.RAILS_DEFAULT_PUBLIC_APP_HOST_PROTOCOL }}
          
          # Frontend Configuration
          frontend-app-name: ${{ secrets.FRONTEND_APP_NAME }}
          auth-origin: ${{ secrets.AUTH_ORIGIN }}
          nuxt-public-rails-api-server: ${{ secrets.NUXT_PUBLIC_RAILS_API_SERVER }}
          
          # Azure AD & WCMC User Management
          azure-ad-client-id: ${{ secrets.NUXT_WCMC_MODULES_WCMC_USER_MANAGEMENT_AZURE_AD_CLIENT_ID }}
          azure-ad-client-secret: ${{ secrets.NUXT_WCMC_MODULES_WCMC_USER_MANAGEMENT_AZURE_AD_CLIENT_SECRET }}
          azure-ad-tenant-id: ${{ secrets.NUXT_WCMC_MODULES_WCMC_USER_MANAGEMENT_AZURE_AD_TENANT_ID }}
          wcmc-user-management-secret: ${{ secrets.NUXT_WCMC_MODULES_WCMC_USER_MANAGEMENT_SECRET }}
          wcmc-user-management-rails-api-server: ${{ secrets.NUXT_PUBLIC_WCMC_MODULES_WCMC_USER_MANAGEMENT_RAILS_API_SERVER }}

      # Notification: Success
      - name: Notify Deployment Success
        if: success()
        uses: unepwcmc/devops-actions/.github/actions/slack-notify@v1
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          notification-type: 'success'
          action-type: 'deploy'
          environment: ${{ inputs.environment || 'staging' }}
          update-message-ts: ${{ steps.notify-start.outputs.message-ts }}
          repository: ${{ github.repository }}
          repository-url: ${{ github.server_url }}/${{ github.repository }}
          action-run-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          actor: ${{ github.actor }}
          actor-url: https://github.com/${{ github.actor }}
          workflow-name: ${{ github.workflow }}
          run-id: ${{ github.run_id }}
          commit-message: ${{ github.event.head_commit.message }}
          deployment-duration: ${{ steps.deploy.outputs.deployment-duration }}

      # Notification: Failure
      - name: Notify Deployment Failure
        if: failure()
        uses: unepwcmc/devops-actions/.github/actions/slack-notify@v1
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          notification-type: 'failure'
          action-type: 'deploy'
          environment: ${{ inputs.environment || 'staging' }}
          update-message-ts: ${{ steps.notify-start.outputs.message-ts }}
          repository: ${{ github.repository }}
          repository-url: ${{ github.server_url }}/${{ github.repository }}
          action-run-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          actor: ${{ github.actor }}
          actor-url: https://github.com/${{ github.actor }}
          workflow-name: ${{ github.workflow }}
          run-id: ${{ github.run_id }}
          commit-message: ${{ github.event.head_commit.message }}
          error-message: 'Frontend deployment failed - check logs for details' 