name: Test DevOps Actions

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of test to run'
        required: true
        type: choice
        options:
        - slack-notify
        - action-validation
        - all
      environment:
        description: 'Test environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  test-slack-notify:
    if: inputs.test_type == 'slack-notify' || inputs.test_type == 'all'
    name: Test Slack Notifications
    runs-on: self-hosted
    environment: ${{ inputs.environment }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test Slack Notify - Started
        id: test-notify-start
        uses: ./.github/actions/slack-notify  # Use local path for testing
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          notification-type: 'started'
          action-type: 'test'
          environment: ${{ inputs.environment }}
          repository: ${{ github.repository }}
          repository-url: ${{ github.server_url }}/${{ github.repository }}
          action-run-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          actor: ${{ github.actor }}
          actor-url: https://github.com/${{ github.actor }}
          workflow-name: ${{ github.workflow }}
          run-id: ${{ github.run_id }}
          commit-message: 'Testing DevOps Actions'

      - name: Simulate Work
        run: |
          echo "üß™ Testing DevOps Actions..."
          sleep 5
          echo "‚úÖ Test completed successfully!"

      - name: Test Slack Notify - Success
        if: success()
        uses: ./.github/actions/slack-notify
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          notification-type: 'success'
          action-type: 'test'
          environment: ${{ inputs.environment }}
          update-message-ts: ${{ steps.test-notify-start.outputs.message-ts }}
          repository: ${{ github.repository }}
          repository-url: ${{ github.server_url }}/${{ github.repository }}
          action-run-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          actor: ${{ github.actor }}
          actor-url: https://github.com/${{ github.actor }}
          workflow-name: ${{ github.workflow }}
          run-id: ${{ github.run_id }}
          commit-message: 'Testing DevOps Actions'
          deployment-duration: '5'

      - name: Test Slack Notify - Failure (if failed)
        if: failure()
        uses: ./.github/actions/slack-notify
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          notification-type: 'failure'
          action-type: 'test'
          environment: ${{ inputs.environment }}
          update-message-ts: ${{ steps.test-notify-start.outputs.message-ts }}
          repository: ${{ github.repository }}
          error-message: 'Test action failed - this is expected for testing'

  validate-actions:
    if: inputs.test_type == 'action-validation' || inputs.test_type == 'all'
    name: Validate Action Structure
    runs-on: self-hosted
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Action Files Exist
        run: |
          echo "üîç Validating action structure..."
          
          # Backend actions
          test -f .github/actions/kamal-v1-setup/action.yml && echo "‚úÖ kamal-v1-setup exists"
          test -f .github/actions/kamal-v1-deploy/action.yml && echo "‚úÖ kamal-v1-deploy exists"
          test -f .github/actions/kamal-v2-setup/action.yml && echo "‚úÖ kamal-v2-setup exists"
          test -f .github/actions/kamal-v2-deploy/action.yml && echo "‚úÖ kamal-v2-deploy exists"
          
          # Frontend actions
          test -f .github/actions/nuxt-kamal-v1-setup/action.yml && echo "‚úÖ nuxt-kamal-v1-setup exists"
          test -f .github/actions/nuxt-kamal-v1-deploy/action.yml && echo "‚úÖ nuxt-kamal-v1-deploy exists"
          test -f .github/actions/nuxt-kamal-v2-setup/action.yml && echo "‚úÖ nuxt-kamal-v2-setup exists"
          test -f .github/actions/nuxt-kamal-v2-deploy/action.yml && echo "‚úÖ nuxt-kamal-v2-deploy exists"
          
          # Slack action
          test -f .github/actions/slack-notify/action.yml && echo "‚úÖ slack-notify exists"
          
          echo "üéâ All required actions found!"

      - name: Validate Workflow Examples
        run: |
          echo "üîç Validating workflow examples..."
          
          test -f .github/workflows/kamal-v1-backend-example.yml && echo "‚úÖ kamal-v1-backend-example.yml exists"
          test -f .github/workflows/kamal-v2-backend-example.yml && echo "‚úÖ kamal-v2-backend-example.yml exists"
          test -f .github/workflows/nuxt-frontend-v1-example.yml && echo "‚úÖ nuxt-frontend-v1-example.yml exists"
          test -f .github/workflows/nuxt-frontend-v2-example.yml && echo "‚úÖ nuxt-frontend-v2-example.yml exists"
          test -f .github/workflows/kamal-setup-example.yml && echo "‚úÖ kamal-setup-example.yml exists"
          test -f .github/workflows/consumer-example.yml && echo "‚úÖ consumer-example.yml exists"
          
          echo "üéâ All workflow examples found!"

      - name: Check YAML Syntax
        run: |
          echo "üîç Checking YAML syntax for actions..."
          
          for action_file in .github/actions/*/action.yml; do
            if python3 -c "import yaml; yaml.safe_load(open('$action_file'))" 2>/dev/null; then
              echo "‚úÖ $action_file - Valid YAML"
            else
              echo "‚ùå $action_file - Invalid YAML"
              exit 1
            fi
          done
          
          echo "üéâ All action YAML files are valid!"

  test-summary:
    needs: [test-slack-notify, validate-actions]
    if: always()
    name: Test Summary
    runs-on: self-hosted
    
    steps:
      - name: Display Test Results
        run: |
          echo "## üß™ DevOps Actions Test Summary"
          echo ""
          echo "### Test Results:"
          
          if [[ "${{ needs.test-slack-notify.result }}" == "success" ]]; then
            echo "‚úÖ Slack Notifications: PASSED"
          elif [[ "${{ needs.test-slack-notify.result }}" == "skipped" ]]; then
            echo "‚è≠Ô∏è  Slack Notifications: SKIPPED"
          else
            echo "‚ùå Slack Notifications: FAILED"
          fi
          
          if [[ "${{ needs.validate-actions.result }}" == "success" ]]; then
            echo "‚úÖ Action Validation: PASSED"
          elif [[ "${{ needs.validate-actions.result }}" == "skipped" ]]; then
            echo "‚è≠Ô∏è  Action Validation: SKIPPED"
          else
            echo "‚ùå Action Validation: FAILED"
          fi
          
          echo ""
          echo "### Next Steps:"
          echo "1. If tests pass, create a v1.0.0 release"
          echo "2. Update all workflow examples to use @v1"
          echo "3. Test in a consumer repository"
          
          # Fail the job if any required tests failed
          if [[ "${{ inputs.test_type }}" == "all" ]]; then
            if [[ "${{ needs.test-slack-notify.result }}" == "failure" ]] || [[ "${{ needs.validate-actions.result }}" == "failure" ]]; then
              echo "‚ùå Some tests failed!"
              exit 1
            fi
          fi
          
          echo "üéâ All tests completed successfully!" 