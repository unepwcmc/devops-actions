name: 'Slack Notify'
description: 'Send deployment notifications to Slack with customizable messages and formatting'
author: 'WCMC DevOps Team'

inputs:
  slack-bot-token:
    description: 'Slack bot token for authentication'
    required: true
  slack-channel-id:
    description: 'Slack channel ID to send notifications to'
    required: true
  notification-type:
    description: 'Type of notification: started, success, failure, custom'
    required: true
    default: 'started'
  action-type:
    description: 'Type of action: deploy, setup, provision, test'
    required: true
    default: 'deploy'
  environment:
    description: 'Environment being deployed to (staging, production)'
    required: true
  repository:
    description: 'Repository name'
    required: true
  repository-url:
    description: 'Repository URL'
    required: true
  action-run-url:
    description: 'GitHub Action run URL'
    required: true
  actor:
    description: 'GitHub actor who triggered the action'
    required: true
  actor-url:
    description: 'GitHub actor profile URL'
    required: true
  workflow-name:
    description: 'Name of the workflow'
    required: true
  run-id:
    description: 'GitHub run ID'
    required: true
  commit-message:
    description: 'Commit message that triggered the deployment'
    required: false
    default: 'No commit message available'
  runner-name:
    description: 'Name of the runner executing the job'
    required: false
    default: 'GitHub Runner'
  start-time:
    description: 'Start time of the action (for started notifications)'
    required: false
  end-time:
    description: 'End time of the action (for success/failure notifications)'
    required: false
  failure-reason:
    description: 'Reason for failure (for failure notifications)'
    required: false
    default: 'GitHub Action failed - check logs for details'
  update-ts:
    description: 'Timestamp to update an existing message'
    required: false
  update-message-ts:
    description: 'Alias for update-ts - timestamp to update an existing message'
    required: false
  custom-message:
    description: 'Custom message for custom notification type'
    required: false
  error-message:
    description: 'Error message for failure notifications'
    required: false
  deployment-duration:
    description: 'Duration of the deployment in seconds'
    required: false
  kamal-version:
    description: 'Kamal version being used'
    required: false

outputs:
  message-ts:
    description: 'Timestamp of the sent message for future updates'
    value: ${{ steps.slack-notification.outputs.ts }}

runs:
  using: 'composite'
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        if [[ ! "${{ inputs.notification-type }}" =~ ^(started|success|failure|custom)$ ]]; then
          echo "Error: notification-type must be one of: started, success, failure, custom"
          exit 1
        fi

        # Convert action-type to lowercase for validation
        action_type_lower=$(echo "${{ inputs.action-type }}" | tr '[:upper:]' '[:lower:]')
        if [[ ! "$action_type_lower" =~ ^(deploy|setup|provision|test)$ ]]; then
          echo "Error: action-type must be one of: deploy, setup, provision, test (case insensitive)"
          echo "Received: ${{ inputs.action-type }}"
          exit 1
        fi

        if [[ ! "${{ inputs.environment }}" =~ ^(staging|production)$ ]]; then
          echo "Error: environment must be either staging or production"
          exit 1
        fi

    - name: Set default values for empty variables
      shell: bash
      run: |
        # Set default values for empty environment variables to prevent JSON parsing errors
        echo "START_TIME=${START_TIME:-$(date -u +"%Y-%m-%dT%H:%M:%SZ")}" >> $GITHUB_ENV
        echo "END_TIME=${END_TIME:-$(date -u +"%Y-%m-%dT%H:%M:%SZ")}" >> $GITHUB_ENV
        echo "DEPLOYMENT_DURATION=${DEPLOYMENT_DURATION:-'N/A'}" >> $GITHUB_ENV
        echo "KAMAL_VERSION=${KAMAL_VERSION:-'N/A'}" >> $GITHUB_ENV
        echo "CUSTOM_MESSAGE=${CUSTOM_MESSAGE:-''}" >> $GITHUB_ENV
        
        # Format ACTION_TYPE for better display (capitalize first letter)
        action_type="${{ inputs.action-type }}"
        formatted_action_type="$(echo ${action_type:0:1} | tr '[:lower:]' '[:upper:]')${action_type:1}"
        echo "ACTION_TYPE=${formatted_action_type}" >> $GITHUB_ENV
        
        # Improve FAILURE_REASON if it's just 'failure'
        failure_reason="${{ inputs.failure-reason }}"
        if [[ "$failure_reason" == "failure" ]]; then
          failure_reason="GitHub Action failed - check logs for details"
        fi
        echo "FAILURE_REASON=${failure_reason}" >> $GITHUB_ENV
      env:
        START_TIME: ${{ inputs.start-time }}
        END_TIME: ${{ inputs.end-time }}
        DEPLOYMENT_DURATION: ${{ inputs.deployment-duration }}
        KAMAL_VERSION: ${{ inputs.kamal-version }}
        CUSTOM_MESSAGE: ${{ inputs.custom-message }}

    - name: Set notification template
      id: template
      shell: bash
      run: |
        case "${{ inputs.notification-type }}" in
          "started")
            echo "template=github-deploy-slack-started.json" >> $GITHUB_OUTPUT
            ;;
          "success")
            echo "template=github-deploy-slack-success.json" >> $GITHUB_OUTPUT
            ;;
          "failure")
            echo "template=github-deploy-slack-failure.json" >> $GITHUB_OUTPUT
            ;;
          "custom")
            echo "template=github-slack-${{ inputs.notification-type }}.json" >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Send Slack notification
      id: slack-notification
      uses: slackapi/slack-github-action@v1.26.0
      with:
        channel-id: ${{ inputs.slack-channel-id }}
        payload-file-path: ${{ github.action_path }}/templates/${{ steps.template.outputs.template }}
        payload-file-path-parsed: true
        update-ts: ${{ inputs.update-ts || inputs.update-message-ts }}
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
        REPOSITORY: ${{ inputs.repository }}
        REPOSITORY_URL: ${{ inputs.repository-url }}
        RUNNER_NAME: ${{ inputs.runner-name }}
        ENVIRONMENT: ${{ inputs.environment }}
        START_TIME: ${{ inputs.start-time }}
        END_TIME: ${{ inputs.end-time }}
        COMMIT_MESSAGE: ${{ inputs.commit-message }}
        ACTION_RUN_URL: ${{ inputs.action-run-url }}
        ACTOR: ${{ inputs.actor }}
        ACTOR_URL: ${{ inputs.actor-url }}
        WORKFLOW_NAME: ${{ inputs.workflow-name }}
        RUN_ID: ${{ inputs.run-id }}
        ERROR_MESSAGE: ${{ inputs.error-message }}
        DEPLOYMENT_DURATION: ${{ inputs.deployment-duration }}
        KAMAL_VERSION: ${{ inputs.kamal-version }}
        CUSTOM_MESSAGE: ${{ inputs.custom-message }}

branding:
  icon: 'message-circle'
  color: 'blue'
