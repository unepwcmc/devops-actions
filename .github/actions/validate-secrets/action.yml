name: 'Validate and Populate Secrets'
description: 'Validates secrets-common file and populates environment variables'

inputs:
  secrets-file:
    description: 'Path to the secrets-common file'
    required: true
    default: '.kamal/secrets-common'
  environment:
    description: 'Environment to validate against'
    required: true
    default: 'staging'

runs:
  using: "composite"
  steps:
    - name: Check if secrets-common exists
      shell: bash
      run: |
        if [ ! -f "${{ inputs.secrets-file }}" ]; then
          echo "::error::Secrets file not found at ${{ inputs.secrets-file }}"
          echo "Please create the secrets file by copying the template:"
          echo "cp .kamal/secrets-common.template ${{ inputs.secrets-file }}"
          exit 1
        fi

    - name: Extract required variables
      id: extract-vars
      shell: bash
      run: |
        # Extract all variable names from secrets-common file
        REQUIRED_VARS=$(grep -v '^#' "${{ inputs.secrets-file }}" | grep -v '^$' | cut -d'=' -f1)
        echo "required_vars<<EOF" >> $GITHUB_OUTPUT
        echo "$REQUIRED_VARS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Validate environment variables
      id: validate-vars
      shell: bash
      run: |
        # Read required variables from previous step
        while IFS= read -r var; do
          if [ -z "$var" ]; then
            continue
          fi
          
          # Check if the variable is set in GitHub secrets
          if [ -z "${!var}" ]; then
            echo "::error::Missing required secret: $var"
            echo "Please add this secret to your GitHub environment (${{ inputs.environment }})"
            echo "You can find the required format in ${{ inputs.secrets-file }}"
            MISSING_VARS=true
          fi
        done <<< "${{ steps.extract-vars.outputs.required_vars }}"
        
        if [ "$MISSING_VARS" = true ]; then
          exit 1
        fi

    - name: Populate environment variables
      shell: bash
      run: |
        # Instead of sourcing the template file, we'll export the existing environment variables
        # The secrets are already available as environment variables from the workflow
        
        echo "✅ All required secrets are validated and available as environment variables"
        echo "The following variables have been validated:"
        
        while IFS= read -r var; do
          if [ -z "$var" ]; then
            continue
          fi
          if [ -n "${!var}" ]; then
            echo "  ✅ $var is set"
          fi
        done <<< "${{ steps.extract-vars.outputs.required_vars }}" 